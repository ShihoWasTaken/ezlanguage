Terminaux inutilisés dans la grammaire

   RETOUR
   DEGRE
   POURCENT
   DIESE
   QUOTE
   LEFT_ACCOLADE
   RIGHT_ACCOLADE
   LEFT_BRACKET
   RIGHT_BRACKET
   FIN
   CONST


État 8 conflits: 1 décalage/réduction
État 17 conflits: 10 décalage/réduction
État 22 conflits: 1 décalage/réduction
État 23 conflits: 1 décalage/réduction
État 36 conflits: 1 décalage/réduction
État 37 conflits: 2 décalage/réduction
État 67 conflits: 10 décalage/réduction
État 77 conflits: 1 décalage/réduction
État 102 conflits: 1 décalage/réduction
État 104 conflits: 1 décalage/réduction
État 106 conflits: 11 décalage/réduction
État 119 conflits: 10 décalage/réduction
État 124 conflits: 1 décalage/réduction
État 125 conflits: 1 décalage/réduction
État 138 conflits: 10 décalage/réduction
État 139 conflits: 10 décalage/réduction
État 140 conflits: 10 décalage/réduction
État 142 conflits: 10 décalage/réduction
État 146 conflits: 1 décalage/réduction
État 150 conflits: 10 décalage/réduction
État 155 conflits: 10 décalage/réduction
État 176 conflits: 10 décalage/réduction
État 177 conflits: 10 décalage/réduction


Grammaire

    0 $accept: ROOT $end

    1 ROOT: declarations_list next_line statement_sequence END_OF_FILE

    2 next_line: %empty
    3          | next_line BACK_LINE

    4 declarations_list: declaration_variables declaration_methods

    5 declaration_methods: function next_line
    6                    | procedure next_line
    7                    | declaration_methods function
    8                    | declaration_methods procedure

    9 declaration_variables: portee NAME IS type next_line
   10                      | portee NAME noms ARE type next_line
   11                      | declaration_variables portee NAME IS type next_line
   12                      | declaration_variables portee NAME noms ARE type next_line

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

   14 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

   15 statement_sequence: %empty
   16                   | statement_sequence statement

   17 liste_argument: %empty
   18               | NAME IS type
   19               | NAME IS type COMMA liste_argument

   20 statement: next_line
   21          | declaration_variables
   22          | affectation
   23          | printing
   24          | IF expression DO statement_sequence ELSE statement_sequence ENDIF
   25          | IF expression DO statement_sequence ENDIF
   26          | WHEN NAME IS whenbody whendefault ENDWHEN
   27          | WHILE expression DO statement_sequence ENDWHILE
   28          | REPEAT statement_sequence UNTIL expression ENDREPEAT
   29          | for

   30 affectation: NAME EGAL expression

   31 printing: PRINT string
   32         | PRINT string noms

   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   34    | FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

   35 function_call: NAME POINT NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS

   36 nbrOrName: NUM_INTEGER
   37          | NUM_REAL
   38          | NAME

   39 portee: LOCAL
   40       | GLOBAL

   41 type: TYPE_INTEGER
   42     | TYPE_REAL
   43     | TYPE_STRING
   44     | TYPE_BOOLEAN

   45 noms: COMMA NAME noms
   46     | COMMA NAME

   47 whenbody: whenbody CASE expression statement_sequence ENDCASE
   48         | CASE expression statement_sequence ENDCASE

   49 whendefault: DEFAULT statement_sequence ENDCASE

   50 string: STRING

   51 expression: expr2
   52           | expr2 EGAL EGAL expr2
   53           | expr2 NE expr2
   54           | expr2 LT expr2
   55           | expr2 LE expr2
   56           | expr2 GT expr2
   57           | expr2 GE expr2

   58 expr2: expr3
   59      | expr2 PLUS expr3
   60      | expr2 MINUS expr3

   61 expr3: expr4
   62      | expr3 MULT expr4
   63      | expr3 DIVISE expr4

   64 expr4: PLUS expr4
   65      | MINUS expr4
   66      | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   67      | NUM_REAL
   68      | NUM_INTEGER
   69      | designator

   70 designator: NAME


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
error (256)
NUM_INTEGER (258) 33 34 36 68
NUM_REAL (259) 37 67
NAME (260) 9 10 11 12 13 14 18 19 26 30 33 34 35 38 45 46 70
RETOUR (261)
STRING (262) 50
COMMA (263) 19 45 46
DEGRE (264)
POURCENT (265)
DIESE (266)
POINT (267) 33 34 35
QUOTE (268)
TYPE_INTEGER (269) 41
TYPE_REAL (270) 42
TYPE_STRING (271) 43
TYPE_BOOLEAN (272) 44
EGAL (273) 30 52
NE (274) 53
LT (275) 54
LE (276) 55
GT (277) 56
GE (278) 57
PLUS (279) 59 64
MINUS (280) 60 65
MULT (281) 62
DIVISE (282) 63
LEFT_PARENTHESIS (283) 13 14 35 66
RIGHT_PARENTHESIS (284) 13 14 35 66
LEFT_ACCOLADE (285)
RIGHT_ACCOLADE (286)
LEFT_BRACKET (287)
RIGHT_BRACKET (288)
FIN (289)
BACK_LINE (290) 3
CONST (291)
LOCAL (292) 39
GLOBAL (293) 40
IS (294) 9 11 18 19 26
ARE (295) 10 12
IF (296) 24 25
DO (297) 24 25 27 33 34
ELSE (298) 24
ENDIF (299) 24 25
WHEN (300) 26
CASE (301) 47 48
ENDCASE (302) 47 48 49
DEFAULT (303) 49
ENDWHEN (304) 26
WHILE (305) 27
ENDWHILE (306) 27
REPEAT (307) 28
UNTIL (308) 28
ENDREPEAT (309) 28
FOR (310) 33 34
IN (311) 33 34
STEP (312) 33 34
ENDFOR (313) 33 34
FUNCTION (314) 13
PROCEDURE (315) 14
RETURN (316) 13
ENDFUNCTION (317) 13
ENDPROCEDURE (318) 14
PRINT (319) 31 32
END_OF_FILE (320) 1


Non-terminaux, suivis des règles où ils apparaissent

$accept (66)
    à gauche: 0
ROOT (67)
    à gauche: 1, à droite: 0
next_line (68)
    à gauche: 2 3, à droite: 1 3 5 6 9 10 11 12 13 14 20 33 34
declarations_list (69)
    à gauche: 4, à droite: 1
declaration_methods (70)
    à gauche: 5 6 7 8, à droite: 4 7 8
declaration_variables (71)
    à gauche: 9 10 11 12, à droite: 4 11 12 21
function (72)
    à gauche: 13, à droite: 5 7
procedure (73)
    à gauche: 14, à droite: 6 8
statement_sequence (74)
    à gauche: 15 16, à droite: 1 13 14 16 24 25 27 28 33 34 47 48
    49
liste_argument (75)
    à gauche: 17 18 19, à droite: 13 14 19
statement (76)
    à gauche: 20 21 22 23 24 25 26 27 28 29, à droite: 16
affectation (77)
    à gauche: 30, à droite: 22
printing (78)
    à gauche: 31 32, à droite: 23
for (79)
    à gauche: 33 34, à droite: 29
function_call (80)
    à gauche: 35, à droite: 34
nbrOrName (81)
    à gauche: 36 37 38, à droite: 33 34
portee (82)
    à gauche: 39 40, à droite: 9 10 11 12
type (83)
    à gauche: 41 42 43 44, à droite: 9 10 11 12 13 18 19
noms (84)
    à gauche: 45 46, à droite: 10 12 32 45
whenbody (85)
    à gauche: 47 48, à droite: 26 47
whendefault (86)
    à gauche: 49, à droite: 26
string (87)
    à gauche: 50, à droite: 31 32
expression (88)
    à gauche: 51 52 53 54 55 56 57, à droite: 13 24 25 27 28 30 47
    48 66
expr2 (89)
    à gauche: 58 59 60, à droite: 51 52 53 54 55 56 57 59 60
expr3 (90)
    à gauche: 61 62 63, à droite: 58 59 60 62 63
expr4 (91)
    à gauche: 64 65 66 67 68 69, à droite: 61 62 63 64 65
designator (92)
    à gauche: 70, à droite: 69


État 0

    0 $accept: . ROOT $end

    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2

    ROOT                   aller à l'état 3
    declarations_list      aller à l'état 4
    declaration_variables  aller à l'état 5
    portee                 aller à l'état 6


État 1

   39 portee: LOCAL .

    $défaut  réduction par utilisation de la règle 39 (portee)


État 2

   40 portee: GLOBAL .

    $défaut  réduction par utilisation de la règle 40 (portee)


État 3

    0 $accept: ROOT . $end

    $end  décalage et aller à l'état 7


État 4

    1 ROOT: declarations_list . next_line statement_sequence END_OF_FILE

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 8


État 5

    4 declarations_list: declaration_variables . declaration_methods
   11 declaration_variables: declaration_variables . portee NAME IS type next_line
   12                      | declaration_variables . portee NAME noms ARE type next_line

    LOCAL      décalage et aller à l'état 1
    GLOBAL     décalage et aller à l'état 2
    FUNCTION   décalage et aller à l'état 9
    PROCEDURE  décalage et aller à l'état 10

    declaration_methods  aller à l'état 11
    function             aller à l'état 12
    procedure            aller à l'état 13
    portee               aller à l'état 14


État 6

    9 declaration_variables: portee . NAME IS type next_line
   10                      | portee . NAME noms ARE type next_line

    NAME  décalage et aller à l'état 15


État 7

    0 $accept: ROOT $end .

    $défaut  accepter


État 8

    1 ROOT: declarations_list next_line . statement_sequence END_OF_FILE
    3 next_line: next_line . BACK_LINE

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 15 (statement_sequence)]
    $défaut   réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 17


État 9

   13 function: FUNCTION . NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    NAME  décalage et aller à l'état 18


État 10

   14 procedure: PROCEDURE . NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    NAME  décalage et aller à l'état 19


État 11

    4 declarations_list: declaration_variables declaration_methods .
    7 declaration_methods: declaration_methods . function
    8                    | declaration_methods . procedure

    FUNCTION   décalage et aller à l'état 9
    PROCEDURE  décalage et aller à l'état 10

    $défaut  réduction par utilisation de la règle 4 (declarations_list)

    function   aller à l'état 20
    procedure  aller à l'état 21


État 12

    5 declaration_methods: function . next_line

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 22


État 13

    6 declaration_methods: procedure . next_line

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 23


État 14

   11 declaration_variables: declaration_variables portee . NAME IS type next_line
   12                      | declaration_variables portee . NAME noms ARE type next_line

    NAME  décalage et aller à l'état 24


État 15

    9 declaration_variables: portee NAME . IS type next_line
   10                      | portee NAME . noms ARE type next_line

    COMMA  décalage et aller à l'état 25
    IS     décalage et aller à l'état 26

    noms  aller à l'état 27


État 16

    3 next_line: next_line BACK_LINE .

    $défaut  réduction par utilisation de la règle 3 (next_line)


État 17

    1 ROOT: declarations_list next_line statement_sequence . END_OF_FILE
   16 statement_sequence: statement_sequence . statement

    NAME         décalage et aller à l'état 28
    LOCAL        décalage et aller à l'état 1
    GLOBAL       décalage et aller à l'état 2
    IF           décalage et aller à l'état 29
    WHEN         décalage et aller à l'état 30
    WHILE        décalage et aller à l'état 31
    REPEAT       décalage et aller à l'état 32
    FOR          décalage et aller à l'état 33
    PRINT        décalage et aller à l'état 34
    END_OF_FILE  décalage et aller à l'état 35

    NAME         [réduction par utilisation de la règle 2 (next_line)]
    LOCAL        [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL       [réduction par utilisation de la règle 2 (next_line)]
    IF           [réduction par utilisation de la règle 2 (next_line)]
    WHEN         [réduction par utilisation de la règle 2 (next_line)]
    WHILE        [réduction par utilisation de la règle 2 (next_line)]
    REPEAT       [réduction par utilisation de la règle 2 (next_line)]
    FOR          [réduction par utilisation de la règle 2 (next_line)]
    PRINT        [réduction par utilisation de la règle 2 (next_line)]
    END_OF_FILE  [réduction par utilisation de la règle 2 (next_line)]
    $défaut     réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 18

   13 function: FUNCTION NAME . LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    LEFT_PARENTHESIS  décalage et aller à l'état 42


État 19

   14 procedure: PROCEDURE NAME . LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    LEFT_PARENTHESIS  décalage et aller à l'état 43


État 20

    7 declaration_methods: declaration_methods function .

    $défaut  réduction par utilisation de la règle 7 (declaration_methods)


État 21

    8 declaration_methods: declaration_methods procedure .

    $défaut  réduction par utilisation de la règle 8 (declaration_methods)


État 22

    3 next_line: next_line . BACK_LINE
    5 declaration_methods: function next_line .

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 5 (declaration_methods)]
    $défaut   réduction par utilisation de la règle 5 (declaration_methods)


État 23

    3 next_line: next_line . BACK_LINE
    6 declaration_methods: procedure next_line .

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 6 (declaration_methods)]
    $défaut   réduction par utilisation de la règle 6 (declaration_methods)


État 24

   11 declaration_variables: declaration_variables portee NAME . IS type next_line
   12                      | declaration_variables portee NAME . noms ARE type next_line

    COMMA  décalage et aller à l'état 25
    IS     décalage et aller à l'état 44

    noms  aller à l'état 45


État 25

   45 noms: COMMA . NAME noms
   46     | COMMA . NAME

    NAME  décalage et aller à l'état 46


État 26

    9 declaration_variables: portee NAME IS . type next_line

    TYPE_INTEGER  décalage et aller à l'état 47
    TYPE_REAL     décalage et aller à l'état 48
    TYPE_STRING   décalage et aller à l'état 49
    TYPE_BOOLEAN  décalage et aller à l'état 50

    type  aller à l'état 51


État 27

   10 declaration_variables: portee NAME noms . ARE type next_line

    ARE  décalage et aller à l'état 52


État 28

   30 affectation: NAME . EGAL expression

    EGAL  décalage et aller à l'état 53


État 29

   24 statement: IF . expression DO statement_sequence ELSE statement_sequence ENDIF
   25          | IF . expression DO statement_sequence ENDIF

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 60
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 30

   26 statement: WHEN . NAME IS whenbody whendefault ENDWHEN

    NAME  décalage et aller à l'état 65


État 31

   27 statement: WHILE . expression DO statement_sequence ENDWHILE

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 66
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 32

   28 statement: REPEAT . statement_sequence UNTIL expression ENDREPEAT

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 67


État 33

   33 for: FOR . NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   34    | FOR . NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    NAME  décalage et aller à l'état 68


État 34

   31 printing: PRINT . string
   32         | PRINT . string noms

    STRING  décalage et aller à l'état 69

    string  aller à l'état 70


État 35

    1 ROOT: declarations_list next_line statement_sequence END_OF_FILE .

    $défaut  réduction par utilisation de la règle 1 (ROOT)


État 36

    3 next_line: next_line . BACK_LINE
   20 statement: next_line .

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 20 (statement)]
    $défaut   réduction par utilisation de la règle 20 (statement)


État 37

   11 declaration_variables: declaration_variables . portee NAME IS type next_line
   12                      | declaration_variables . portee NAME noms ARE type next_line
   21 statement: declaration_variables .

    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2

    LOCAL     [réduction par utilisation de la règle 21 (statement)]
    GLOBAL    [réduction par utilisation de la règle 21 (statement)]
    $défaut  réduction par utilisation de la règle 21 (statement)

    portee  aller à l'état 14


État 38

   16 statement_sequence: statement_sequence statement .

    $défaut  réduction par utilisation de la règle 16 (statement_sequence)


État 39

   22 statement: affectation .

    $défaut  réduction par utilisation de la règle 22 (statement)


État 40

   23 statement: printing .

    $défaut  réduction par utilisation de la règle 23 (statement)


État 41

   29 statement: for .

    $défaut  réduction par utilisation de la règle 29 (statement)


État 42

   13 function: FUNCTION NAME LEFT_PARENTHESIS . liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    NAME  décalage et aller à l'état 71

    $défaut  réduction par utilisation de la règle 17 (liste_argument)

    liste_argument  aller à l'état 72


État 43

   14 procedure: PROCEDURE NAME LEFT_PARENTHESIS . liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    NAME  décalage et aller à l'état 71

    $défaut  réduction par utilisation de la règle 17 (liste_argument)

    liste_argument  aller à l'état 73


État 44

   11 declaration_variables: declaration_variables portee NAME IS . type next_line

    TYPE_INTEGER  décalage et aller à l'état 47
    TYPE_REAL     décalage et aller à l'état 48
    TYPE_STRING   décalage et aller à l'état 49
    TYPE_BOOLEAN  décalage et aller à l'état 50

    type  aller à l'état 74


État 45

   12 declaration_variables: declaration_variables portee NAME noms . ARE type next_line

    ARE  décalage et aller à l'état 75


État 46

   45 noms: COMMA NAME . noms
   46     | COMMA NAME .

    COMMA  décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 46 (noms)

    noms  aller à l'état 76


État 47

   41 type: TYPE_INTEGER .

    $défaut  réduction par utilisation de la règle 41 (type)


État 48

   42 type: TYPE_REAL .

    $défaut  réduction par utilisation de la règle 42 (type)


État 49

   43 type: TYPE_STRING .

    $défaut  réduction par utilisation de la règle 43 (type)


État 50

   44 type: TYPE_BOOLEAN .

    $défaut  réduction par utilisation de la règle 44 (type)


État 51

    9 declaration_variables: portee NAME IS type . next_line

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 77


État 52

   10 declaration_variables: portee NAME noms ARE . type next_line

    TYPE_INTEGER  décalage et aller à l'état 47
    TYPE_REAL     décalage et aller à l'état 48
    TYPE_STRING   décalage et aller à l'état 49
    TYPE_BOOLEAN  décalage et aller à l'état 50

    type  aller à l'état 78


État 53

   30 affectation: NAME EGAL . expression

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 79
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 54

   68 expr4: NUM_INTEGER .

    $défaut  réduction par utilisation de la règle 68 (expr4)


État 55

   67 expr4: NUM_REAL .

    $défaut  réduction par utilisation de la règle 67 (expr4)


État 56

   70 designator: NAME .

    $défaut  réduction par utilisation de la règle 70 (designator)


État 57

   64 expr4: PLUS . expr4

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr4       aller à l'état 80
    designator  aller à l'état 64


État 58

   65 expr4: MINUS . expr4

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr4       aller à l'état 81
    designator  aller à l'état 64


État 59

   66 expr4: LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 82
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 60

   24 statement: IF expression . DO statement_sequence ELSE statement_sequence ENDIF
   25          | IF expression . DO statement_sequence ENDIF

    DO  décalage et aller à l'état 83


État 61

   51 expression: expr2 .
   52           | expr2 . EGAL EGAL expr2
   53           | expr2 . NE expr2
   54           | expr2 . LT expr2
   55           | expr2 . LE expr2
   56           | expr2 . GT expr2
   57           | expr2 . GE expr2
   59 expr2: expr2 . PLUS expr3
   60      | expr2 . MINUS expr3

    EGAL   décalage et aller à l'état 84
    NE     décalage et aller à l'état 85
    LT     décalage et aller à l'état 86
    LE     décalage et aller à l'état 87
    GT     décalage et aller à l'état 88
    GE     décalage et aller à l'état 89
    PLUS   décalage et aller à l'état 90
    MINUS  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 51 (expression)


État 62

   58 expr2: expr3 .
   62 expr3: expr3 . MULT expr4
   63      | expr3 . DIVISE expr4

    MULT    décalage et aller à l'état 92
    DIVISE  décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 58 (expr2)


État 63

   61 expr3: expr4 .

    $défaut  réduction par utilisation de la règle 61 (expr3)


État 64

   69 expr4: designator .

    $défaut  réduction par utilisation de la règle 69 (expr4)


État 65

   26 statement: WHEN NAME . IS whenbody whendefault ENDWHEN

    IS  décalage et aller à l'état 94


État 66

   27 statement: WHILE expression . DO statement_sequence ENDWHILE

    DO  décalage et aller à l'état 95


État 67

   16 statement_sequence: statement_sequence . statement
   28 statement: REPEAT statement_sequence . UNTIL expression ENDREPEAT

    NAME    décalage et aller à l'état 28
    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2
    IF      décalage et aller à l'état 29
    WHEN    décalage et aller à l'état 30
    WHILE   décalage et aller à l'état 31
    REPEAT  décalage et aller à l'état 32
    UNTIL   décalage et aller à l'état 96
    FOR     décalage et aller à l'état 33
    PRINT   décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    UNTIL     [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 68

   33 for: FOR NAME . IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   34    | FOR NAME . IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    IN  décalage et aller à l'état 97


État 69

   50 string: STRING .

    $défaut  réduction par utilisation de la règle 50 (string)


État 70

   31 printing: PRINT string .
   32         | PRINT string . noms

    COMMA  décalage et aller à l'état 25

    $défaut  réduction par utilisation de la règle 31 (printing)

    noms  aller à l'état 98


État 71

   18 liste_argument: NAME . IS type
   19               | NAME . IS type COMMA liste_argument

    IS  décalage et aller à l'état 99


État 72

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument . RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    RIGHT_PARENTHESIS  décalage et aller à l'état 100


État 73

   14 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument . RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    RIGHT_PARENTHESIS  décalage et aller à l'état 101


État 74

   11 declaration_variables: declaration_variables portee NAME IS type . next_line

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 102


État 75

   12 declaration_variables: declaration_variables portee NAME noms ARE . type next_line

    TYPE_INTEGER  décalage et aller à l'état 47
    TYPE_REAL     décalage et aller à l'état 48
    TYPE_STRING   décalage et aller à l'état 49
    TYPE_BOOLEAN  décalage et aller à l'état 50

    type  aller à l'état 103


État 76

   45 noms: COMMA NAME noms .

    $défaut  réduction par utilisation de la règle 45 (noms)


État 77

    3 next_line: next_line . BACK_LINE
    9 declaration_variables: portee NAME IS type next_line .

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 9 (declaration_variables)]
    $défaut   réduction par utilisation de la règle 9 (declaration_variables)


État 78

   10 declaration_variables: portee NAME noms ARE type . next_line

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 104


État 79

   30 affectation: NAME EGAL expression .

    $défaut  réduction par utilisation de la règle 30 (affectation)


État 80

   64 expr4: PLUS expr4 .

    $défaut  réduction par utilisation de la règle 64 (expr4)


État 81

   65 expr4: MINUS expr4 .

    $défaut  réduction par utilisation de la règle 65 (expr4)


État 82

   66 expr4: LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  décalage et aller à l'état 105


État 83

   24 statement: IF expression DO . statement_sequence ELSE statement_sequence ENDIF
   25          | IF expression DO . statement_sequence ENDIF

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 106


État 84

   52 expression: expr2 EGAL . EGAL expr2

    EGAL  décalage et aller à l'état 107


État 85

   53 expression: expr2 NE . expr2

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr2       aller à l'état 108
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 86

   54 expression: expr2 LT . expr2

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr2       aller à l'état 109
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 87

   55 expression: expr2 LE . expr2

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr2       aller à l'état 110
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 88

   56 expression: expr2 GT . expr2

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr2       aller à l'état 111
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 89

   57 expression: expr2 GE . expr2

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr2       aller à l'état 112
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 90

   59 expr2: expr2 PLUS . expr3

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr3       aller à l'état 113
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 91

   60 expr2: expr2 MINUS . expr3

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr3       aller à l'état 114
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 92

   62 expr3: expr3 MULT . expr4

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr4       aller à l'état 115
    designator  aller à l'état 64


État 93

   63 expr3: expr3 DIVISE . expr4

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr4       aller à l'état 116
    designator  aller à l'état 64


État 94

   26 statement: WHEN NAME IS . whenbody whendefault ENDWHEN

    CASE  décalage et aller à l'état 117

    whenbody  aller à l'état 118


État 95

   27 statement: WHILE expression DO . statement_sequence ENDWHILE

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 119


État 96

   28 statement: REPEAT statement_sequence UNTIL . expression ENDREPEAT

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 120
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 97

   33 for: FOR NAME IN . NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   34    | FOR NAME IN . NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 121


État 98

   32 printing: PRINT string noms .

    $défaut  réduction par utilisation de la règle 32 (printing)


État 99

   18 liste_argument: NAME IS . type
   19               | NAME IS . type COMMA liste_argument

    TYPE_INTEGER  décalage et aller à l'état 47
    TYPE_REAL     décalage et aller à l'état 48
    TYPE_STRING   décalage et aller à l'état 49
    TYPE_BOOLEAN  décalage et aller à l'état 50

    type  aller à l'état 122


État 100

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS . RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    RETURN  décalage et aller à l'état 123


État 101

   14 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS . next_line statement_sequence ENDPROCEDURE

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 124


État 102

    3 next_line: next_line . BACK_LINE
   11 declaration_variables: declaration_variables portee NAME IS type next_line .

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 11 (declaration_variables)]
    $défaut   réduction par utilisation de la règle 11 (declaration_variables)


État 103

   12 declaration_variables: declaration_variables portee NAME noms ARE type . next_line

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 125


État 104

    3 next_line: next_line . BACK_LINE
   10 declaration_variables: portee NAME noms ARE type next_line .

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 10 (declaration_variables)]
    $défaut   réduction par utilisation de la règle 10 (declaration_variables)


État 105

   66 expr4: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $défaut  réduction par utilisation de la règle 66 (expr4)


État 106

   16 statement_sequence: statement_sequence . statement
   24 statement: IF expression DO statement_sequence . ELSE statement_sequence ENDIF
   25          | IF expression DO statement_sequence . ENDIF

    NAME    décalage et aller à l'état 28
    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2
    IF      décalage et aller à l'état 29
    ELSE    décalage et aller à l'état 126
    ENDIF   décalage et aller à l'état 127
    WHEN    décalage et aller à l'état 30
    WHILE   décalage et aller à l'état 31
    REPEAT  décalage et aller à l'état 32
    FOR     décalage et aller à l'état 33
    PRINT   décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    ELSE      [réduction par utilisation de la règle 2 (next_line)]
    ENDIF     [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 107

   52 expression: expr2 EGAL EGAL . expr2

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expr2       aller à l'état 128
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 108

   53 expression: expr2 NE expr2 .
   59 expr2: expr2 . PLUS expr3
   60      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 90
    MINUS  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 53 (expression)


État 109

   54 expression: expr2 LT expr2 .
   59 expr2: expr2 . PLUS expr3
   60      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 90
    MINUS  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 54 (expression)


État 110

   55 expression: expr2 LE expr2 .
   59 expr2: expr2 . PLUS expr3
   60      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 90
    MINUS  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 55 (expression)


État 111

   56 expression: expr2 GT expr2 .
   59 expr2: expr2 . PLUS expr3
   60      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 90
    MINUS  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 56 (expression)


État 112

   57 expression: expr2 GE expr2 .
   59 expr2: expr2 . PLUS expr3
   60      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 90
    MINUS  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 57 (expression)


État 113

   59 expr2: expr2 PLUS expr3 .
   62 expr3: expr3 . MULT expr4
   63      | expr3 . DIVISE expr4

    MULT    décalage et aller à l'état 92
    DIVISE  décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 59 (expr2)


État 114

   60 expr2: expr2 MINUS expr3 .
   62 expr3: expr3 . MULT expr4
   63      | expr3 . DIVISE expr4

    MULT    décalage et aller à l'état 92
    DIVISE  décalage et aller à l'état 93

    $défaut  réduction par utilisation de la règle 60 (expr2)


État 115

   62 expr3: expr3 MULT expr4 .

    $défaut  réduction par utilisation de la règle 62 (expr3)


État 116

   63 expr3: expr3 DIVISE expr4 .

    $défaut  réduction par utilisation de la règle 63 (expr3)


État 117

   48 whenbody: CASE . expression statement_sequence ENDCASE

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 129
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 118

   26 statement: WHEN NAME IS whenbody . whendefault ENDWHEN
   47 whenbody: whenbody . CASE expression statement_sequence ENDCASE

    CASE     décalage et aller à l'état 130
    DEFAULT  décalage et aller à l'état 131

    whendefault  aller à l'état 132


État 119

   16 statement_sequence: statement_sequence . statement
   27 statement: WHILE expression DO statement_sequence . ENDWHILE

    NAME      décalage et aller à l'état 28
    LOCAL     décalage et aller à l'état 1
    GLOBAL    décalage et aller à l'état 2
    IF        décalage et aller à l'état 29
    WHEN      décalage et aller à l'état 30
    WHILE     décalage et aller à l'état 31
    ENDWHILE  décalage et aller à l'état 133
    REPEAT    décalage et aller à l'état 32
    FOR       décalage et aller à l'état 33
    PRINT     décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    ENDWHILE  [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 120

   28 statement: REPEAT statement_sequence UNTIL expression . ENDREPEAT

    ENDREPEAT  décalage et aller à l'état 134


État 121

   33 for: FOR NAME IN NUM_INTEGER . POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   34    | FOR NAME IN NUM_INTEGER . POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    POINT  décalage et aller à l'état 135


État 122

   18 liste_argument: NAME IS type .
   19               | NAME IS type . COMMA liste_argument

    COMMA  décalage et aller à l'état 136

    $défaut  réduction par utilisation de la règle 18 (liste_argument)


État 123

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN . type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    TYPE_INTEGER  décalage et aller à l'état 47
    TYPE_REAL     décalage et aller à l'état 48
    TYPE_STRING   décalage et aller à l'état 49
    TYPE_BOOLEAN  décalage et aller à l'état 50

    type  aller à l'état 137


État 124

    3 next_line: next_line . BACK_LINE
   14 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line . statement_sequence ENDPROCEDURE

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 15 (statement_sequence)]
    $défaut   réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 138


État 125

    3 next_line: next_line . BACK_LINE
   12 declaration_variables: declaration_variables portee NAME noms ARE type next_line .

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 12 (declaration_variables)]
    $défaut   réduction par utilisation de la règle 12 (declaration_variables)


État 126

   24 statement: IF expression DO statement_sequence ELSE . statement_sequence ENDIF

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 139


État 127

   25 statement: IF expression DO statement_sequence ENDIF .

    $défaut  réduction par utilisation de la règle 25 (statement)


État 128

   52 expression: expr2 EGAL EGAL expr2 .
   59 expr2: expr2 . PLUS expr3
   60      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 90
    MINUS  décalage et aller à l'état 91

    $défaut  réduction par utilisation de la règle 52 (expression)


État 129

   48 whenbody: CASE expression . statement_sequence ENDCASE

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 140


État 130

   47 whenbody: whenbody CASE . expression statement_sequence ENDCASE

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 141
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 131

   49 whendefault: DEFAULT . statement_sequence ENDCASE

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 142


État 132

   26 statement: WHEN NAME IS whenbody whendefault . ENDWHEN

    ENDWHEN  décalage et aller à l'état 143


État 133

   27 statement: WHILE expression DO statement_sequence ENDWHILE .

    $défaut  réduction par utilisation de la règle 27 (statement)


État 134

   28 statement: REPEAT statement_sequence UNTIL expression ENDREPEAT .

    $défaut  réduction par utilisation de la règle 28 (statement)


État 135

   33 for: FOR NAME IN NUM_INTEGER POINT . POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   34    | FOR NAME IN NUM_INTEGER POINT . POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    POINT  décalage et aller à l'état 144


État 136

   19 liste_argument: NAME IS type COMMA . liste_argument

    NAME  décalage et aller à l'état 71

    $défaut  réduction par utilisation de la règle 17 (liste_argument)

    liste_argument  aller à l'état 145


État 137

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type . next_line statement_sequence RETURN expression next_line ENDFUNCTION

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 146


État 138

   14 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence . ENDPROCEDURE
   16 statement_sequence: statement_sequence . statement

    NAME          décalage et aller à l'état 28
    LOCAL         décalage et aller à l'état 1
    GLOBAL        décalage et aller à l'état 2
    IF            décalage et aller à l'état 29
    WHEN          décalage et aller à l'état 30
    WHILE         décalage et aller à l'état 31
    REPEAT        décalage et aller à l'état 32
    FOR           décalage et aller à l'état 33
    ENDPROCEDURE  décalage et aller à l'état 147
    PRINT         décalage et aller à l'état 34

    NAME          [réduction par utilisation de la règle 2 (next_line)]
    LOCAL         [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL        [réduction par utilisation de la règle 2 (next_line)]
    IF            [réduction par utilisation de la règle 2 (next_line)]
    WHEN          [réduction par utilisation de la règle 2 (next_line)]
    WHILE         [réduction par utilisation de la règle 2 (next_line)]
    REPEAT        [réduction par utilisation de la règle 2 (next_line)]
    FOR           [réduction par utilisation de la règle 2 (next_line)]
    ENDPROCEDURE  [réduction par utilisation de la règle 2 (next_line)]
    PRINT         [réduction par utilisation de la règle 2 (next_line)]
    $défaut      réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 139

   16 statement_sequence: statement_sequence . statement
   24 statement: IF expression DO statement_sequence ELSE statement_sequence . ENDIF

    NAME    décalage et aller à l'état 28
    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2
    IF      décalage et aller à l'état 29
    ENDIF   décalage et aller à l'état 148
    WHEN    décalage et aller à l'état 30
    WHILE   décalage et aller à l'état 31
    REPEAT  décalage et aller à l'état 32
    FOR     décalage et aller à l'état 33
    PRINT   décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    ENDIF     [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 140

   16 statement_sequence: statement_sequence . statement
   48 whenbody: CASE expression statement_sequence . ENDCASE

    NAME     décalage et aller à l'état 28
    LOCAL    décalage et aller à l'état 1
    GLOBAL   décalage et aller à l'état 2
    IF       décalage et aller à l'état 29
    WHEN     décalage et aller à l'état 30
    ENDCASE  décalage et aller à l'état 149
    WHILE    décalage et aller à l'état 31
    REPEAT   décalage et aller à l'état 32
    FOR      décalage et aller à l'état 33
    PRINT    décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    ENDCASE   [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 141

   47 whenbody: whenbody CASE expression . statement_sequence ENDCASE

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 150


État 142

   16 statement_sequence: statement_sequence . statement
   49 whendefault: DEFAULT statement_sequence . ENDCASE

    NAME     décalage et aller à l'état 28
    LOCAL    décalage et aller à l'état 1
    GLOBAL   décalage et aller à l'état 2
    IF       décalage et aller à l'état 29
    WHEN     décalage et aller à l'état 30
    ENDCASE  décalage et aller à l'état 151
    WHILE    décalage et aller à l'état 31
    REPEAT   décalage et aller à l'état 32
    FOR      décalage et aller à l'état 33
    PRINT    décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    ENDCASE   [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 143

   26 statement: WHEN NAME IS whenbody whendefault ENDWHEN .

    $défaut  réduction par utilisation de la règle 26 (statement)


État 144

   33 for: FOR NAME IN NUM_INTEGER POINT POINT . NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   34    | FOR NAME IN NUM_INTEGER POINT POINT . function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 152
    NAME         décalage et aller à l'état 153

    function_call  aller à l'état 154


État 145

   19 liste_argument: NAME IS type COMMA liste_argument .

    $défaut  réduction par utilisation de la règle 19 (liste_argument)


État 146

    3 next_line: next_line . BACK_LINE
   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line . statement_sequence RETURN expression next_line ENDFUNCTION

    BACK_LINE  décalage et aller à l'état 16

    BACK_LINE  [réduction par utilisation de la règle 15 (statement_sequence)]
    $défaut   réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 155


État 147

   14 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE .

    $défaut  réduction par utilisation de la règle 14 (procedure)


État 148

   24 statement: IF expression DO statement_sequence ELSE statement_sequence ENDIF .

    $défaut  réduction par utilisation de la règle 24 (statement)


État 149

   48 whenbody: CASE expression statement_sequence ENDCASE .

    $défaut  réduction par utilisation de la règle 48 (whenbody)


État 150

   16 statement_sequence: statement_sequence . statement
   47 whenbody: whenbody CASE expression statement_sequence . ENDCASE

    NAME     décalage et aller à l'état 28
    LOCAL    décalage et aller à l'état 1
    GLOBAL   décalage et aller à l'état 2
    IF       décalage et aller à l'état 29
    WHEN     décalage et aller à l'état 30
    ENDCASE  décalage et aller à l'état 156
    WHILE    décalage et aller à l'état 31
    REPEAT   décalage et aller à l'état 32
    FOR      décalage et aller à l'état 33
    PRINT    décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    ENDCASE   [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 151

   49 whendefault: DEFAULT statement_sequence ENDCASE .

    $défaut  réduction par utilisation de la règle 49 (whendefault)


État 152

   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER . STEP nbrOrName next_line DO statement_sequence ENDFOR

    STEP  décalage et aller à l'état 157


État 153

   35 function_call: NAME . POINT NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS

    POINT  décalage et aller à l'état 158


État 154

   34 for: FOR NAME IN NUM_INTEGER POINT POINT function_call . STEP nbrOrName next_line DO statement_sequence ENDFOR

    STEP  décalage et aller à l'état 159


État 155

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence . RETURN expression next_line ENDFUNCTION
   16 statement_sequence: statement_sequence . statement

    NAME    décalage et aller à l'état 28
    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2
    IF      décalage et aller à l'état 29
    WHEN    décalage et aller à l'état 30
    WHILE   décalage et aller à l'état 31
    REPEAT  décalage et aller à l'état 32
    FOR     décalage et aller à l'état 33
    RETURN  décalage et aller à l'état 160
    PRINT   décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    RETURN    [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 156

   47 whenbody: whenbody CASE expression statement_sequence ENDCASE .

    $défaut  réduction par utilisation de la règle 47 (whenbody)


État 157

   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP . nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 161
    NUM_REAL     décalage et aller à l'état 162
    NAME         décalage et aller à l'état 163

    nbrOrName  aller à l'état 164


État 158

   35 function_call: NAME POINT . NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS

    NAME  décalage et aller à l'état 165


État 159

   34 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP . nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 161
    NUM_REAL     décalage et aller à l'état 162
    NAME         décalage et aller à l'état 163

    nbrOrName  aller à l'état 166


État 160

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN . expression next_line ENDFUNCTION

    NUM_INTEGER       décalage et aller à l'état 54
    NUM_REAL          décalage et aller à l'état 55
    NAME              décalage et aller à l'état 56
    PLUS              décalage et aller à l'état 57
    MINUS             décalage et aller à l'état 58
    LEFT_PARENTHESIS  décalage et aller à l'état 59

    expression  aller à l'état 167
    expr2       aller à l'état 61
    expr3       aller à l'état 62
    expr4       aller à l'état 63
    designator  aller à l'état 64


État 161

   36 nbrOrName: NUM_INTEGER .

    $défaut  réduction par utilisation de la règle 36 (nbrOrName)


État 162

   37 nbrOrName: NUM_REAL .

    $défaut  réduction par utilisation de la règle 37 (nbrOrName)


État 163

   38 nbrOrName: NAME .

    $défaut  réduction par utilisation de la règle 38 (nbrOrName)


État 164

   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName . next_line DO statement_sequence ENDFOR

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 168


État 165

   35 function_call: NAME POINT NAME . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  décalage et aller à l'état 169


État 166

   34 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName . next_line DO statement_sequence ENDFOR

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 170


État 167

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression . next_line ENDFUNCTION

    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 171


État 168

    3 next_line: next_line . BACK_LINE
   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line . DO statement_sequence ENDFOR

    BACK_LINE  décalage et aller à l'état 16
    DO         décalage et aller à l'état 172


État 169

   35 function_call: NAME POINT NAME LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  décalage et aller à l'état 173


État 170

    3 next_line: next_line . BACK_LINE
   34 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line . DO statement_sequence ENDFOR

    BACK_LINE  décalage et aller à l'état 16
    DO         décalage et aller à l'état 174


État 171

    3 next_line: next_line . BACK_LINE
   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line . ENDFUNCTION

    BACK_LINE    décalage et aller à l'état 16
    ENDFUNCTION  décalage et aller à l'état 175


État 172

   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO . statement_sequence ENDFOR

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 176


État 173

   35 function_call: NAME POINT NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $défaut  réduction par utilisation de la règle 35 (function_call)


État 174

   34 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO . statement_sequence ENDFOR

    $défaut  réduction par utilisation de la règle 15 (statement_sequence)

    statement_sequence  aller à l'état 177


État 175

   13 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION .

    $défaut  réduction par utilisation de la règle 13 (function)


État 176

   16 statement_sequence: statement_sequence . statement
   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence . ENDFOR

    NAME    décalage et aller à l'état 28
    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2
    IF      décalage et aller à l'état 29
    WHEN    décalage et aller à l'état 30
    WHILE   décalage et aller à l'état 31
    REPEAT  décalage et aller à l'état 32
    FOR     décalage et aller à l'état 33
    ENDFOR  décalage et aller à l'état 178
    PRINT   décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    ENDFOR    [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 177

   16 statement_sequence: statement_sequence . statement
   34 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence . ENDFOR

    NAME    décalage et aller à l'état 28
    LOCAL   décalage et aller à l'état 1
    GLOBAL  décalage et aller à l'état 2
    IF      décalage et aller à l'état 29
    WHEN    décalage et aller à l'état 30
    WHILE   décalage et aller à l'état 31
    REPEAT  décalage et aller à l'état 32
    FOR     décalage et aller à l'état 33
    ENDFOR  décalage et aller à l'état 179
    PRINT   décalage et aller à l'état 34

    NAME      [réduction par utilisation de la règle 2 (next_line)]
    LOCAL     [réduction par utilisation de la règle 2 (next_line)]
    GLOBAL    [réduction par utilisation de la règle 2 (next_line)]
    IF        [réduction par utilisation de la règle 2 (next_line)]
    WHEN      [réduction par utilisation de la règle 2 (next_line)]
    WHILE     [réduction par utilisation de la règle 2 (next_line)]
    REPEAT    [réduction par utilisation de la règle 2 (next_line)]
    FOR       [réduction par utilisation de la règle 2 (next_line)]
    ENDFOR    [réduction par utilisation de la règle 2 (next_line)]
    PRINT     [réduction par utilisation de la règle 2 (next_line)]
    $défaut  réduction par utilisation de la règle 2 (next_line)

    next_line              aller à l'état 36
    declaration_variables  aller à l'état 37
    statement              aller à l'état 38
    affectation            aller à l'état 39
    printing               aller à l'état 40
    for                    aller à l'état 41
    portee                 aller à l'état 6


État 178

   33 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR .

    $défaut  réduction par utilisation de la règle 33 (for)


État 179

   34 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR .

    $défaut  réduction par utilisation de la règle 34 (for)
