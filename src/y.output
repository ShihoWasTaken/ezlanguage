Terminaux inutilisés dans la grammaire

   RETOUR
   DEGRE
   POURCENT
   DIESE
   QUOTE
   LEFT_ACCOLADE
   RIGHT_ACCOLADE
   LEFT_BRACKET
   RIGHT_BRACKET
   FIN
   CONST


La règle est inutile dans l'analyseur à cause de conflits

    4 declarations_list: declaration_variables declaration_methods


État 5 conflits: 1 décalage/réduction
État 9 conflits: 1 décalage/réduction


Grammaire

    0 $accept: ROOT $end

    1 ROOT: declarations_list next_line statement_sequence END_OF_FILE

    2 next_line: BACK_LINE
    3          | BACK_LINE next_line

    4 declarations_list: declaration_variables declaration_methods

    5 declaration_methods: %empty
    6                    | declaration_methods next_line function
    7                    | declaration_methods next_line procedure

    8 declaration_variables: %empty
    9                      | declaration_variables portee NAME IS type next_line
   10                      | declaration_variables portee NAME noms ARE type next_line

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

   12 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

   13 statement_sequence: statement
   14                   | statement next_line statement_sequence

   15 liste_argument: %empty
   16               | NAME IS type
   17               | NAME IS type COMMA liste_argument

   18 statement: declaration_variables
   19          | affectation
   20          | printing
   21          | IF expression DO statement_sequence ELSE statement_sequence ENDIF
   22          | IF expression DO statement_sequence ENDIF
   23          | WHEN NAME IS whenbody whendefault ENDWHEN
   24          | WHILE expression DO statement_sequence ENDWHILE
   25          | REPEAT statement_sequence UNTIL expression ENDREPEAT
   26          | for

   27 affectation: NAME EGAL expression

   28 printing: PRINT string
   29         | PRINT string noms

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   31    | FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

   32 function_call: NAME POINT NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS

   33 nbrOrName: NUM_INTEGER
   34          | NUM_REAL
   35          | NAME

   36 portee: LOCAL
   37       | GLOBAL

   38 type: TYPE_INTEGER
   39     | TYPE_REAL
   40     | TYPE_STRING
   41     | TYPE_BOOLEAN

   42 noms: COMMA NAME noms
   43     | COMMA NAME

   44 whenbody: whenbody CASE expression statement_sequence ENDCASE
   45         | CASE expression statement_sequence ENDCASE

   46 whendefault: DEFAULT statement_sequence ENDCASE

   47 string: STRING

   48 expression: expr2
   49           | expr2 EGAL EGAL expr2
   50           | expr2 NE expr2
   51           | expr2 LT expr2
   52           | expr2 LE expr2
   53           | expr2 GT expr2
   54           | expr2 GE expr2

   55 expr2: expr3
   56      | expr2 PLUS expr3
   57      | expr2 MINUS expr3

   58 expr3: expr4
   59      | expr3 MULT expr4
   60      | expr3 DIVISE expr4

   61 expr4: PLUS expr4
   62      | MINUS expr4
   63      | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS
   64      | NUM_REAL
   65      | NUM_INTEGER
   66      | designator

   67 designator: NAME


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
error (256)
NUM_INTEGER (258) 30 31 33 65
NUM_REAL (259) 34 64
NAME (260) 9 10 11 12 16 17 23 27 30 31 32 35 42 43 67
RETOUR (261)
STRING (262) 47
COMMA (263) 17 42 43
DEGRE (264)
POURCENT (265)
DIESE (266)
POINT (267) 30 31 32
QUOTE (268)
TYPE_INTEGER (269) 38
TYPE_REAL (270) 39
TYPE_STRING (271) 40
TYPE_BOOLEAN (272) 41
EGAL (273) 27 49
NE (274) 50
LT (275) 51
LE (276) 52
GT (277) 53
GE (278) 54
PLUS (279) 56 61
MINUS (280) 57 62
MULT (281) 59
DIVISE (282) 60
LEFT_PARENTHESIS (283) 11 12 32 63
RIGHT_PARENTHESIS (284) 11 12 32 63
LEFT_ACCOLADE (285)
RIGHT_ACCOLADE (286)
LEFT_BRACKET (287)
RIGHT_BRACKET (288)
FIN (289)
BACK_LINE (290) 2 3
CONST (291)
LOCAL (292) 36
GLOBAL (293) 37
IS (294) 9 16 17 23
ARE (295) 10
IF (296) 21 22
DO (297) 21 22 24 30 31
ELSE (298) 21
ENDIF (299) 21 22
WHEN (300) 23
CASE (301) 44 45
ENDCASE (302) 44 45 46
DEFAULT (303) 46
ENDWHEN (304) 23
WHILE (305) 24
ENDWHILE (306) 24
REPEAT (307) 25
UNTIL (308) 25
ENDREPEAT (309) 25
FOR (310) 30 31
IN (311) 30 31
STEP (312) 30 31
ENDFOR (313) 30 31
FUNCTION (314) 11
PROCEDURE (315) 12
RETURN (316) 11
ENDFUNCTION (317) 11
ENDPROCEDURE (318) 12
PRINT (319) 28 29
END_OF_FILE (320) 1


Non-terminaux, suivis des règles où ils apparaissent

$accept (66)
    à gauche: 0
ROOT (67)
    à gauche: 1, à droite: 0
next_line (68)
    à gauche: 2 3, à droite: 1 3 6 7 9 10 11 12 14 30 31
declarations_list (69)
    à gauche: 4, à droite: 1
declaration_methods (70)
    à gauche: 5 6 7, à droite: 4 6 7
declaration_variables (71)
    à gauche: 8 9 10, à droite: 4 9 10 18
function (72)
    à gauche: 11, à droite: 6
procedure (73)
    à gauche: 12, à droite: 7
statement_sequence (74)
    à gauche: 13 14, à droite: 1 11 12 14 21 22 24 25 30 31 44 45
    46
liste_argument (75)
    à gauche: 15 16 17, à droite: 11 12 17
statement (76)
    à gauche: 18 19 20 21 22 23 24 25 26, à droite: 13 14
affectation (77)
    à gauche: 27, à droite: 19
printing (78)
    à gauche: 28 29, à droite: 20
for (79)
    à gauche: 30 31, à droite: 26
function_call (80)
    à gauche: 32, à droite: 31
nbrOrName (81)
    à gauche: 33 34 35, à droite: 30 31
portee (82)
    à gauche: 36 37, à droite: 9 10
type (83)
    à gauche: 38 39 40 41, à droite: 9 10 11 16 17
noms (84)
    à gauche: 42 43, à droite: 10 29 42
whenbody (85)
    à gauche: 44 45, à droite: 23 44
whendefault (86)
    à gauche: 46, à droite: 23
string (87)
    à gauche: 47, à droite: 28 29
expression (88)
    à gauche: 48 49 50 51 52 53 54, à droite: 11 21 22 24 25 27 44
    45 63
expr2 (89)
    à gauche: 55 56 57, à droite: 48 49 50 51 52 53 54 56 57
expr3 (90)
    à gauche: 58 59 60, à droite: 55 56 57 59 60
expr4 (91)
    à gauche: 61 62 63 64 65 66, à droite: 58 59 60 61 62
designator (92)
    à gauche: 67, à droite: 66


État 0

    0 $accept: . ROOT $end

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    ROOT                   aller à l'état 1
    declarations_list      aller à l'état 2
    declaration_variables  aller à l'état 3


État 1

    0 $accept: ROOT . $end

    $end  décalage et aller à l'état 4


État 2

    1 ROOT: declarations_list . next_line statement_sequence END_OF_FILE

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 6


État 3

    4 declarations_list: declaration_variables . declaration_methods
    9 declaration_variables: declaration_variables . portee NAME IS type next_line
   10                      | declaration_variables . portee NAME noms ARE type next_line

    LOCAL   décalage et aller à l'état 7
    GLOBAL  décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 5 (declaration_methods)

    declaration_methods  aller à l'état 9
    portee               aller à l'état 10


État 4

    0 $accept: ROOT $end .

    $défaut  accepter


État 5

    2 next_line: BACK_LINE .
    3          | BACK_LINE . next_line

    BACK_LINE  décalage et aller à l'état 5

    BACK_LINE  [réduction par utilisation de la règle 2 (next_line)]
    $défaut   réduction par utilisation de la règle 2 (next_line)

    next_line  aller à l'état 11


État 6

    1 ROOT: declarations_list next_line . statement_sequence END_OF_FILE

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 20
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 7

   36 portee: LOCAL .

    $défaut  réduction par utilisation de la règle 36 (portee)


État 8

   37 portee: GLOBAL .

    $défaut  réduction par utilisation de la règle 37 (portee)


État 9

    4 declarations_list: declaration_variables declaration_methods .
    6 declaration_methods: declaration_methods . next_line function
    7                    | declaration_methods . next_line procedure

    BACK_LINE  décalage et aller à l'état 5

    BACK_LINE  [réduction par utilisation de la règle 4 (declarations_list)]

    next_line  aller à l'état 25


État 10

    9 declaration_variables: declaration_variables portee . NAME IS type next_line
   10                      | declaration_variables portee . NAME noms ARE type next_line

    NAME  décalage et aller à l'état 26


État 11

    3 next_line: BACK_LINE next_line .

    $défaut  réduction par utilisation de la règle 3 (next_line)


État 12

   27 affectation: NAME . EGAL expression

    EGAL  décalage et aller à l'état 27


État 13

   21 statement: IF . expression DO statement_sequence ELSE statement_sequence ENDIF
   22          | IF . expression DO statement_sequence ENDIF

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 34
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 14

   23 statement: WHEN . NAME IS whenbody whendefault ENDWHEN

    NAME  décalage et aller à l'état 39


État 15

   24 statement: WHILE . expression DO statement_sequence ENDWHILE

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 40
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 16

   25 statement: REPEAT . statement_sequence UNTIL expression ENDREPEAT

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 41
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 17

   30 for: FOR . NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   31    | FOR . NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    NAME  décalage et aller à l'état 42


État 18

   28 printing: PRINT . string
   29         | PRINT . string noms

    STRING  décalage et aller à l'état 43

    string  aller à l'état 44


État 19

    9 declaration_variables: declaration_variables . portee NAME IS type next_line
   10                      | declaration_variables . portee NAME noms ARE type next_line
   18 statement: declaration_variables .

    LOCAL   décalage et aller à l'état 7
    GLOBAL  décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 18 (statement)

    portee  aller à l'état 10


État 20

    1 ROOT: declarations_list next_line statement_sequence . END_OF_FILE

    END_OF_FILE  décalage et aller à l'état 45


État 21

   13 statement_sequence: statement .
   14                   | statement . next_line statement_sequence

    BACK_LINE  décalage et aller à l'état 5

    $défaut  réduction par utilisation de la règle 13 (statement_sequence)

    next_line  aller à l'état 46


État 22

   19 statement: affectation .

    $défaut  réduction par utilisation de la règle 19 (statement)


État 23

   20 statement: printing .

    $défaut  réduction par utilisation de la règle 20 (statement)


État 24

   26 statement: for .

    $défaut  réduction par utilisation de la règle 26 (statement)


État 25

    6 declaration_methods: declaration_methods next_line . function
    7                    | declaration_methods next_line . procedure

    FUNCTION   décalage et aller à l'état 47
    PROCEDURE  décalage et aller à l'état 48

    function   aller à l'état 49
    procedure  aller à l'état 50


État 26

    9 declaration_variables: declaration_variables portee NAME . IS type next_line
   10                      | declaration_variables portee NAME . noms ARE type next_line

    COMMA  décalage et aller à l'état 51
    IS     décalage et aller à l'état 52

    noms  aller à l'état 53


État 27

   27 affectation: NAME EGAL . expression

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 54
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 28

   65 expr4: NUM_INTEGER .

    $défaut  réduction par utilisation de la règle 65 (expr4)


État 29

   64 expr4: NUM_REAL .

    $défaut  réduction par utilisation de la règle 64 (expr4)


État 30

   67 designator: NAME .

    $défaut  réduction par utilisation de la règle 67 (designator)


État 31

   61 expr4: PLUS . expr4

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr4       aller à l'état 55
    designator  aller à l'état 38


État 32

   62 expr4: MINUS . expr4

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr4       aller à l'état 56
    designator  aller à l'état 38


État 33

   63 expr4: LEFT_PARENTHESIS . expression RIGHT_PARENTHESIS

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 57
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 34

   21 statement: IF expression . DO statement_sequence ELSE statement_sequence ENDIF
   22          | IF expression . DO statement_sequence ENDIF

    DO  décalage et aller à l'état 58


État 35

   48 expression: expr2 .
   49           | expr2 . EGAL EGAL expr2
   50           | expr2 . NE expr2
   51           | expr2 . LT expr2
   52           | expr2 . LE expr2
   53           | expr2 . GT expr2
   54           | expr2 . GE expr2
   56 expr2: expr2 . PLUS expr3
   57      | expr2 . MINUS expr3

    EGAL   décalage et aller à l'état 59
    NE     décalage et aller à l'état 60
    LT     décalage et aller à l'état 61
    LE     décalage et aller à l'état 62
    GT     décalage et aller à l'état 63
    GE     décalage et aller à l'état 64
    PLUS   décalage et aller à l'état 65
    MINUS  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 48 (expression)


État 36

   55 expr2: expr3 .
   59 expr3: expr3 . MULT expr4
   60      | expr3 . DIVISE expr4

    MULT    décalage et aller à l'état 67
    DIVISE  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 55 (expr2)


État 37

   58 expr3: expr4 .

    $défaut  réduction par utilisation de la règle 58 (expr3)


État 38

   66 expr4: designator .

    $défaut  réduction par utilisation de la règle 66 (expr4)


État 39

   23 statement: WHEN NAME . IS whenbody whendefault ENDWHEN

    IS  décalage et aller à l'état 69


État 40

   24 statement: WHILE expression . DO statement_sequence ENDWHILE

    DO  décalage et aller à l'état 70


État 41

   25 statement: REPEAT statement_sequence . UNTIL expression ENDREPEAT

    UNTIL  décalage et aller à l'état 71


État 42

   30 for: FOR NAME . IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   31    | FOR NAME . IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    IN  décalage et aller à l'état 72


État 43

   47 string: STRING .

    $défaut  réduction par utilisation de la règle 47 (string)


État 44

   28 printing: PRINT string .
   29         | PRINT string . noms

    COMMA  décalage et aller à l'état 51

    $défaut  réduction par utilisation de la règle 28 (printing)

    noms  aller à l'état 73


État 45

    1 ROOT: declarations_list next_line statement_sequence END_OF_FILE .

    $défaut  réduction par utilisation de la règle 1 (ROOT)


État 46

   14 statement_sequence: statement next_line . statement_sequence

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 74
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 47

   11 function: FUNCTION . NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    NAME  décalage et aller à l'état 75


État 48

   12 procedure: PROCEDURE . NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    NAME  décalage et aller à l'état 76


État 49

    6 declaration_methods: declaration_methods next_line function .

    $défaut  réduction par utilisation de la règle 6 (declaration_methods)


État 50

    7 declaration_methods: declaration_methods next_line procedure .

    $défaut  réduction par utilisation de la règle 7 (declaration_methods)


État 51

   42 noms: COMMA . NAME noms
   43     | COMMA . NAME

    NAME  décalage et aller à l'état 77


État 52

    9 declaration_variables: declaration_variables portee NAME IS . type next_line

    TYPE_INTEGER  décalage et aller à l'état 78
    TYPE_REAL     décalage et aller à l'état 79
    TYPE_STRING   décalage et aller à l'état 80
    TYPE_BOOLEAN  décalage et aller à l'état 81

    type  aller à l'état 82


État 53

   10 declaration_variables: declaration_variables portee NAME noms . ARE type next_line

    ARE  décalage et aller à l'état 83


État 54

   27 affectation: NAME EGAL expression .

    $défaut  réduction par utilisation de la règle 27 (affectation)


État 55

   61 expr4: PLUS expr4 .

    $défaut  réduction par utilisation de la règle 61 (expr4)


État 56

   62 expr4: MINUS expr4 .

    $défaut  réduction par utilisation de la règle 62 (expr4)


État 57

   63 expr4: LEFT_PARENTHESIS expression . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  décalage et aller à l'état 84


État 58

   21 statement: IF expression DO . statement_sequence ELSE statement_sequence ENDIF
   22          | IF expression DO . statement_sequence ENDIF

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 85
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 59

   49 expression: expr2 EGAL . EGAL expr2

    EGAL  décalage et aller à l'état 86


État 60

   50 expression: expr2 NE . expr2

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr2       aller à l'état 87
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 61

   51 expression: expr2 LT . expr2

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr2       aller à l'état 88
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 62

   52 expression: expr2 LE . expr2

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr2       aller à l'état 89
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 63

   53 expression: expr2 GT . expr2

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr2       aller à l'état 90
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 64

   54 expression: expr2 GE . expr2

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr2       aller à l'état 91
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 65

   56 expr2: expr2 PLUS . expr3

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr3       aller à l'état 92
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 66

   57 expr2: expr2 MINUS . expr3

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr3       aller à l'état 93
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 67

   59 expr3: expr3 MULT . expr4

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr4       aller à l'état 94
    designator  aller à l'état 38


État 68

   60 expr3: expr3 DIVISE . expr4

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr4       aller à l'état 95
    designator  aller à l'état 38


État 69

   23 statement: WHEN NAME IS . whenbody whendefault ENDWHEN

    CASE  décalage et aller à l'état 96

    whenbody  aller à l'état 97


État 70

   24 statement: WHILE expression DO . statement_sequence ENDWHILE

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 98
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 71

   25 statement: REPEAT statement_sequence UNTIL . expression ENDREPEAT

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 99
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 72

   30 for: FOR NAME IN . NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   31    | FOR NAME IN . NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 100


État 73

   29 printing: PRINT string noms .

    $défaut  réduction par utilisation de la règle 29 (printing)


État 74

   14 statement_sequence: statement next_line statement_sequence .

    $défaut  réduction par utilisation de la règle 14 (statement_sequence)


État 75

   11 function: FUNCTION NAME . LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    LEFT_PARENTHESIS  décalage et aller à l'état 101


État 76

   12 procedure: PROCEDURE NAME . LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    LEFT_PARENTHESIS  décalage et aller à l'état 102


État 77

   42 noms: COMMA NAME . noms
   43     | COMMA NAME .

    COMMA  décalage et aller à l'état 51

    $défaut  réduction par utilisation de la règle 43 (noms)

    noms  aller à l'état 103


État 78

   38 type: TYPE_INTEGER .

    $défaut  réduction par utilisation de la règle 38 (type)


État 79

   39 type: TYPE_REAL .

    $défaut  réduction par utilisation de la règle 39 (type)


État 80

   40 type: TYPE_STRING .

    $défaut  réduction par utilisation de la règle 40 (type)


État 81

   41 type: TYPE_BOOLEAN .

    $défaut  réduction par utilisation de la règle 41 (type)


État 82

    9 declaration_variables: declaration_variables portee NAME IS type . next_line

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 104


État 83

   10 declaration_variables: declaration_variables portee NAME noms ARE . type next_line

    TYPE_INTEGER  décalage et aller à l'état 78
    TYPE_REAL     décalage et aller à l'état 79
    TYPE_STRING   décalage et aller à l'état 80
    TYPE_BOOLEAN  décalage et aller à l'état 81

    type  aller à l'état 105


État 84

   63 expr4: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS .

    $défaut  réduction par utilisation de la règle 63 (expr4)


État 85

   21 statement: IF expression DO statement_sequence . ELSE statement_sequence ENDIF
   22          | IF expression DO statement_sequence . ENDIF

    ELSE   décalage et aller à l'état 106
    ENDIF  décalage et aller à l'état 107


État 86

   49 expression: expr2 EGAL EGAL . expr2

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expr2       aller à l'état 108
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 87

   50 expression: expr2 NE expr2 .
   56 expr2: expr2 . PLUS expr3
   57      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 65
    MINUS  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 50 (expression)


État 88

   51 expression: expr2 LT expr2 .
   56 expr2: expr2 . PLUS expr3
   57      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 65
    MINUS  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 51 (expression)


État 89

   52 expression: expr2 LE expr2 .
   56 expr2: expr2 . PLUS expr3
   57      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 65
    MINUS  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 52 (expression)


État 90

   53 expression: expr2 GT expr2 .
   56 expr2: expr2 . PLUS expr3
   57      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 65
    MINUS  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 53 (expression)


État 91

   54 expression: expr2 GE expr2 .
   56 expr2: expr2 . PLUS expr3
   57      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 65
    MINUS  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 54 (expression)


État 92

   56 expr2: expr2 PLUS expr3 .
   59 expr3: expr3 . MULT expr4
   60      | expr3 . DIVISE expr4

    MULT    décalage et aller à l'état 67
    DIVISE  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 56 (expr2)


État 93

   57 expr2: expr2 MINUS expr3 .
   59 expr3: expr3 . MULT expr4
   60      | expr3 . DIVISE expr4

    MULT    décalage et aller à l'état 67
    DIVISE  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 57 (expr2)


État 94

   59 expr3: expr3 MULT expr4 .

    $défaut  réduction par utilisation de la règle 59 (expr3)


État 95

   60 expr3: expr3 DIVISE expr4 .

    $défaut  réduction par utilisation de la règle 60 (expr3)


État 96

   45 whenbody: CASE . expression statement_sequence ENDCASE

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 109
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 97

   23 statement: WHEN NAME IS whenbody . whendefault ENDWHEN
   44 whenbody: whenbody . CASE expression statement_sequence ENDCASE

    CASE     décalage et aller à l'état 110
    DEFAULT  décalage et aller à l'état 111

    whendefault  aller à l'état 112


État 98

   24 statement: WHILE expression DO statement_sequence . ENDWHILE

    ENDWHILE  décalage et aller à l'état 113


État 99

   25 statement: REPEAT statement_sequence UNTIL expression . ENDREPEAT

    ENDREPEAT  décalage et aller à l'état 114


État 100

   30 for: FOR NAME IN NUM_INTEGER . POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   31    | FOR NAME IN NUM_INTEGER . POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    POINT  décalage et aller à l'état 115


État 101

   11 function: FUNCTION NAME LEFT_PARENTHESIS . liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    NAME  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 15 (liste_argument)

    liste_argument  aller à l'état 117


État 102

   12 procedure: PROCEDURE NAME LEFT_PARENTHESIS . liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    NAME  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 15 (liste_argument)

    liste_argument  aller à l'état 118


État 103

   42 noms: COMMA NAME noms .

    $défaut  réduction par utilisation de la règle 42 (noms)


État 104

    9 declaration_variables: declaration_variables portee NAME IS type next_line .

    $défaut  réduction par utilisation de la règle 9 (declaration_variables)


État 105

   10 declaration_variables: declaration_variables portee NAME noms ARE type . next_line

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 119


État 106

   21 statement: IF expression DO statement_sequence ELSE . statement_sequence ENDIF

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 120
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 107

   22 statement: IF expression DO statement_sequence ENDIF .

    $défaut  réduction par utilisation de la règle 22 (statement)


État 108

   49 expression: expr2 EGAL EGAL expr2 .
   56 expr2: expr2 . PLUS expr3
   57      | expr2 . MINUS expr3

    PLUS   décalage et aller à l'état 65
    MINUS  décalage et aller à l'état 66

    $défaut  réduction par utilisation de la règle 49 (expression)


État 109

   45 whenbody: CASE expression . statement_sequence ENDCASE

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 121
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 110

   44 whenbody: whenbody CASE . expression statement_sequence ENDCASE

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 122
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 111

   46 whendefault: DEFAULT . statement_sequence ENDCASE

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 123
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 112

   23 statement: WHEN NAME IS whenbody whendefault . ENDWHEN

    ENDWHEN  décalage et aller à l'état 124


État 113

   24 statement: WHILE expression DO statement_sequence ENDWHILE .

    $défaut  réduction par utilisation de la règle 24 (statement)


État 114

   25 statement: REPEAT statement_sequence UNTIL expression ENDREPEAT .

    $défaut  réduction par utilisation de la règle 25 (statement)


État 115

   30 for: FOR NAME IN NUM_INTEGER POINT . POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   31    | FOR NAME IN NUM_INTEGER POINT . POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    POINT  décalage et aller à l'état 125


État 116

   16 liste_argument: NAME . IS type
   17               | NAME . IS type COMMA liste_argument

    IS  décalage et aller à l'état 126


État 117

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument . RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    RIGHT_PARENTHESIS  décalage et aller à l'état 127


État 118

   12 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument . RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE

    RIGHT_PARENTHESIS  décalage et aller à l'état 128


État 119

   10 declaration_variables: declaration_variables portee NAME noms ARE type next_line .

    $défaut  réduction par utilisation de la règle 10 (declaration_variables)


État 120

   21 statement: IF expression DO statement_sequence ELSE statement_sequence . ENDIF

    ENDIF  décalage et aller à l'état 129


État 121

   45 whenbody: CASE expression statement_sequence . ENDCASE

    ENDCASE  décalage et aller à l'état 130


État 122

   44 whenbody: whenbody CASE expression . statement_sequence ENDCASE

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 131
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 123

   46 whendefault: DEFAULT statement_sequence . ENDCASE

    ENDCASE  décalage et aller à l'état 132


État 124

   23 statement: WHEN NAME IS whenbody whendefault ENDWHEN .

    $défaut  réduction par utilisation de la règle 23 (statement)


État 125

   30 for: FOR NAME IN NUM_INTEGER POINT POINT . NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR
   31    | FOR NAME IN NUM_INTEGER POINT POINT . function_call STEP nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 133
    NAME         décalage et aller à l'état 134

    function_call  aller à l'état 135


État 126

   16 liste_argument: NAME IS . type
   17               | NAME IS . type COMMA liste_argument

    TYPE_INTEGER  décalage et aller à l'état 78
    TYPE_REAL     décalage et aller à l'état 79
    TYPE_STRING   décalage et aller à l'état 80
    TYPE_BOOLEAN  décalage et aller à l'état 81

    type  aller à l'état 136


État 127

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS . RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    RETURN  décalage et aller à l'état 137


État 128

   12 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS . next_line statement_sequence ENDPROCEDURE

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 138


État 129

   21 statement: IF expression DO statement_sequence ELSE statement_sequence ENDIF .

    $défaut  réduction par utilisation de la règle 21 (statement)


État 130

   45 whenbody: CASE expression statement_sequence ENDCASE .

    $défaut  réduction par utilisation de la règle 45 (whenbody)


État 131

   44 whenbody: whenbody CASE expression statement_sequence . ENDCASE

    ENDCASE  décalage et aller à l'état 139


État 132

   46 whendefault: DEFAULT statement_sequence ENDCASE .

    $défaut  réduction par utilisation de la règle 46 (whendefault)


État 133

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER . STEP nbrOrName next_line DO statement_sequence ENDFOR

    STEP  décalage et aller à l'état 140


État 134

   32 function_call: NAME . POINT NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS

    POINT  décalage et aller à l'état 141


État 135

   31 for: FOR NAME IN NUM_INTEGER POINT POINT function_call . STEP nbrOrName next_line DO statement_sequence ENDFOR

    STEP  décalage et aller à l'état 142


État 136

   16 liste_argument: NAME IS type .
   17               | NAME IS type . COMMA liste_argument

    COMMA  décalage et aller à l'état 143

    $défaut  réduction par utilisation de la règle 16 (liste_argument)


État 137

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN . type next_line statement_sequence RETURN expression next_line ENDFUNCTION

    TYPE_INTEGER  décalage et aller à l'état 78
    TYPE_REAL     décalage et aller à l'état 79
    TYPE_STRING   décalage et aller à l'état 80
    TYPE_BOOLEAN  décalage et aller à l'état 81

    type  aller à l'état 144


État 138

   12 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line . statement_sequence ENDPROCEDURE

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 145
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 139

   44 whenbody: whenbody CASE expression statement_sequence ENDCASE .

    $défaut  réduction par utilisation de la règle 44 (whenbody)


État 140

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP . nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 146
    NUM_REAL     décalage et aller à l'état 147
    NAME         décalage et aller à l'état 148

    nbrOrName  aller à l'état 149


État 141

   32 function_call: NAME POINT . NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS

    NAME  décalage et aller à l'état 150


État 142

   31 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP . nbrOrName next_line DO statement_sequence ENDFOR

    NUM_INTEGER  décalage et aller à l'état 146
    NUM_REAL     décalage et aller à l'état 147
    NAME         décalage et aller à l'état 148

    nbrOrName  aller à l'état 151


État 143

   17 liste_argument: NAME IS type COMMA . liste_argument

    NAME  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 15 (liste_argument)

    liste_argument  aller à l'état 152


État 144

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type . next_line statement_sequence RETURN expression next_line ENDFUNCTION

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 153


État 145

   12 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence . ENDPROCEDURE

    ENDPROCEDURE  décalage et aller à l'état 154


État 146

   33 nbrOrName: NUM_INTEGER .

    $défaut  réduction par utilisation de la règle 33 (nbrOrName)


État 147

   34 nbrOrName: NUM_REAL .

    $défaut  réduction par utilisation de la règle 34 (nbrOrName)


État 148

   35 nbrOrName: NAME .

    $défaut  réduction par utilisation de la règle 35 (nbrOrName)


État 149

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName . next_line DO statement_sequence ENDFOR

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 155


État 150

   32 function_call: NAME POINT NAME . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  décalage et aller à l'état 156


État 151

   31 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName . next_line DO statement_sequence ENDFOR

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 157


État 152

   17 liste_argument: NAME IS type COMMA liste_argument .

    $défaut  réduction par utilisation de la règle 17 (liste_argument)


État 153

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line . statement_sequence RETURN expression next_line ENDFUNCTION

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 158
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 154

   12 procedure: PROCEDURE NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS next_line statement_sequence ENDPROCEDURE .

    $défaut  réduction par utilisation de la règle 12 (procedure)


État 155

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line . DO statement_sequence ENDFOR

    DO  décalage et aller à l'état 159


État 156

   32 function_call: NAME POINT NAME LEFT_PARENTHESIS . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  décalage et aller à l'état 160


État 157

   31 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line . DO statement_sequence ENDFOR

    DO  décalage et aller à l'état 161


État 158

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence . RETURN expression next_line ENDFUNCTION

    RETURN  décalage et aller à l'état 162


État 159

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO . statement_sequence ENDFOR

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 163
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 160

   32 function_call: NAME POINT NAME LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $défaut  réduction par utilisation de la règle 32 (function_call)


État 161

   31 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO . statement_sequence ENDFOR

    NAME    décalage et aller à l'état 12
    IF      décalage et aller à l'état 13
    WHEN    décalage et aller à l'état 14
    WHILE   décalage et aller à l'état 15
    REPEAT  décalage et aller à l'état 16
    FOR     décalage et aller à l'état 17
    PRINT   décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 8 (declaration_variables)

    declaration_variables  aller à l'état 19
    statement_sequence     aller à l'état 164
    statement              aller à l'état 21
    affectation            aller à l'état 22
    printing               aller à l'état 23
    for                    aller à l'état 24


État 162

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN . expression next_line ENDFUNCTION

    NUM_INTEGER       décalage et aller à l'état 28
    NUM_REAL          décalage et aller à l'état 29
    NAME              décalage et aller à l'état 30
    PLUS              décalage et aller à l'état 31
    MINUS             décalage et aller à l'état 32
    LEFT_PARENTHESIS  décalage et aller à l'état 33

    expression  aller à l'état 165
    expr2       aller à l'état 35
    expr3       aller à l'état 36
    expr4       aller à l'état 37
    designator  aller à l'état 38


État 163

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence . ENDFOR

    ENDFOR  décalage et aller à l'état 166


État 164

   31 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence . ENDFOR

    ENDFOR  décalage et aller à l'état 167


État 165

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression . next_line ENDFUNCTION

    BACK_LINE  décalage et aller à l'état 5

    next_line  aller à l'état 168


État 166

   30 for: FOR NAME IN NUM_INTEGER POINT POINT NUM_INTEGER STEP nbrOrName next_line DO statement_sequence ENDFOR .

    $défaut  réduction par utilisation de la règle 30 (for)


État 167

   31 for: FOR NAME IN NUM_INTEGER POINT POINT function_call STEP nbrOrName next_line DO statement_sequence ENDFOR .

    $défaut  réduction par utilisation de la règle 31 (for)


État 168

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line . ENDFUNCTION

    ENDFUNCTION  décalage et aller à l'état 169


État 169

   11 function: FUNCTION NAME LEFT_PARENTHESIS liste_argument RIGHT_PARENTHESIS RETURN type next_line statement_sequence RETURN expression next_line ENDFUNCTION .

    $défaut  réduction par utilisation de la règle 11 (function)
